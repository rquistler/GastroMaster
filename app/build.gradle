apply plugin: 'com.android.application'
apply from: "../buildsystem/config.gradle"
apply from: "../buildsystem/quality/quality.gradle"


def globalConf = rootProject.ext
def configuration = ext.configuration;


android {

    compileSdkVersion configuration.compileSdkVersion
    buildToolsVersion configuration.buildToolsVersion

    defaultConfig {

        applicationId configuration.applicationId
        minSdkVersion configuration.minSdkVersion
        targetSdkVersion configuration.targetVersion
        versionCode configuration.versionCode
        versionName configuration.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }
    }



    dexOptions {
        javaMaxHeapSize "4g"
    }

    signingConfigs {

        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'
            storeFile file('../buildsystem/keystore/debug.keystore')
        }
    }

    buildTypes {

        debug {

            signingConfig signingConfigs.debug
            minifyEnabled false
            shrinkResources false
            testCoverageEnabled true
            debuggable true
            applicationIdSuffix ".debug"
        }

        release {

            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    productFlavors {
//
//        staging {
//
//            applicationIdSuffix ".staging"
//        }
//
//        production {
//
//            applicationIdSuffix ".production"
//        }
//    }

    compileOptions {

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {

        enabled = true
    }

    packagingOptions {

        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
    }
}

dependencies {

    Map<String, String> dependencies = globalConf.dependencies

    compile fileTree(include: ['*.jar'], dir: 'libs')

    androidTestCompile(dependencies.espresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile dependencies.appCompat
    compile dependencies.recyclerView
    compile dependencies.cardView
    compile dependencies.supportV4
    compile dependencies.supportDesign
    compile dependencies.constraintLayout

    compile dependencies.rxJava
    compile dependencies.rxAndroid

    compile dependencies.dagger
    annotationProcessor dependencies.daggerCompiler

    testCompile dependencies.junit
    androidTestCompile dependencies.junit

    testCompile dependencies.mockitoCore
    androidTestCompile dependencies.mockitoCore
    androidTestCompile dependencies.supportAnnotations

    androidTestCompile dependencies.supportTestRunner
    androidTestCompile dependencies.supportTestRules

    androidTestCompile 'com.android.support:support-annotations:25.3.1'

    debugCompile dependencies.leakCanary
    releaseCompile dependencies.leakCanaryNoOp
    testCompile dependencies.leakCanaryNoOp

    compileOnly dependencies.autoValue
    annotationProcessor dependencies.autoValue
    annotationProcessor dependencies.autoValueWith

    testCompile "com.google.truth:truth:0.33"
    testCompile 'org.assertj:assertj-core:3.8.0'
    androidTestCompile 'com.squareup.assertj:assertj-android:1.1.1'


}
repositories {
    mavenCentral()
}
